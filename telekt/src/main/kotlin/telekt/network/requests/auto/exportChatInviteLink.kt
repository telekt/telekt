package rocks.waffle.telekt.network.requests.auto

import kotlinx.serialization.*
import kotlinx.serialization.json.Json
import rocks.waffle.telekt.network.TelegramMethod
import rocks.waffle.telekt.network.requests.abstracts.SimpleRequest
import rocks.waffle.telekt.util.Recipient


/**
 * [ExportChatInviteLink] request.
 * Use this method to generate a new invite link for a chat; any previously generated link is revoked. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns the new invite link as String on success.
 * More: https://core.telegram.org/bots/api#exportchatinvitelink
 */
@Serializable data class ExportChatInviteLink(
    /** Unique identifier for the target chat or username of the target channel (in the format @channelusername) Note: Each administrator in a chat generates their own invite links. Bots can't use invite links generated by other administrators. If you want your bot to work with invite links, it will need to generate its own link using exportChatInviteLink â€“ after this the link will become available to the bot via the getChat method. If your bot needs to generate a new invite link replacing its previous one, use exportChatInviteLink again. */
    @SerialName("chat_id") val chatId: Recipient
) : SimpleRequest<String>() {
    @Transient override val method = TelegramMethod.exportChatInviteLink
    @Transient override val resultDeserializer: KSerializer<out String> = String.serializer()
    override fun stringify(json: Json): String = json.stringify(ExportChatInviteLink.serializer(), this)
}
